[build-system]
requires = [
    "hatchling>=1.21.1",
    "jupyterlab>=4.0.0,<5",
    "hatch-nodejs-version>=0.3.2",
]
build-backend = "hatchling.build"

[project]
name = "widgyts"
description = "A Custom Jupyter Widget Library for Interactive Visualization with yt"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "The yt Project", email = "yt-dev@python.org" },
]
keywords = [
    "Jupyter",
    "JupyterLab",
    "JupyterLab4",
]
classifiers = [
    "Framework :: Jupyter",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "ipycanvas>=0.4.7",
    "ipywidgets>=8.0.0",
    "jupyterlab>=4.0",
    "numpy>=1.21.2",
    "pythreejs>=2.2.0",
    "traitlets>=4.3.3",
    "yt>=4.0.3",
]
version = "0.5.1"

[project.license]
file = "LICENSE"

[project.urls]
Documentation = "https://widgyts.readthedocs.org/"
Homepage = "https://yt-project.org/"
Source = "https://github.com/yt-project/widgyts/"
Tracker = "https://github.com/yt-project/widgyts/issues"

[tool.hatch.build]
artifacts = [
    "widgyts/labextension/*.tgz",
    "widgyts/labextension",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel.shared-data]
"widgyts/labextension/static" = "share/jupyter/labextensions/@yt-project/yt-widgets/static"
"install.json" = "share/jupyter/labextensions/@yt-project/yt-widgets/install.json"
"widgyts/labextension/build_log.json" = "share/jupyter/labextensions/@yt-project/yt-widgets/build_log.json"
"widgyts/labextension/package.json" = "share/jupyter/labextensions/@yt-project/yt-widgets/package.json"
jupyter-config = "etc/jupyter/jupyter_server_config.d"

[tool.hatch.build.targets.sdist]
exclude = [
    ".github",
]

[tool.hatch.build.hooks.jupyter-builder]
dependencies = [
    "hatch-jupyter-builder>=0.8.3",
]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "widgyts/labextension/static/style.js",
    "widgyts/labextension/package.json",
]
skip-if-exists = [
    "widgyts/labextension/static/style.js",
]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
path = "."
build_cmd = "build:prod"
npm = [
    "jlpm",
]

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
path = "."
build_dir = "widgyts/labextension"
source_dir = "src"
build_cmd = "install:extension"
npm = [
    "jlpm",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "G",    # flake8-logging-format
    "TCH",  # flake8-type-checking
    "YTT",  # flake8-2020
    "UP",   # pyupgrade
    "I",    # isort
    "NPY",  # numpy specific rules
    "RUF031"# incorrectly-parenthesized-tuple-in-subscript
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-third-party = [
    "IPython",
    "nose",
    "numpy",
    "sympy",
    "matplotlib",
    "unyt",
    "git",
    "yaml",
    "dateutil",
    "requests",
    "coverage",
    "pytest",
    "pyx",
    "glue",
]
known-first-party = [
    "yt",
]

[tool.ruff.lint.per-file-ignores]
"examples/galaxy_display.ipynb" = [
    "F401", # unused-import
]

[tool.tbump]
field = [
    { name = "channel", default = "" },
    { name = "release", default = "" },
]

[tool.tbump.version]
current = "0.5.1"
regex = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)((?P<channel>a|b|rc|.dev)(?P<release>\\d+))?"

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "pyproject.toml"
version_template = "version = \"{major}.{minor}.{patch}{channel}{release}\""

[[tool.tbump.file]]
src = "widgyts/_version.py"

[[tool.tbump.file]]
src = "package.json"
version_template = "\"version\": \"{major}.{minor}.{patch}{channel}{release}\""
